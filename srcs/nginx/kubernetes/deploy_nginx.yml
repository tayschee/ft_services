kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx
  namespace: default
  selfLink: /apis/apps/v1/namespaces/default/deployments/nginx
  uid: 0f580c16-dd05-4962-8c6c-08497aceee80
  resourceVersion: '21407'
  generation: 2
  creationTimestamp: '2020-09-15T15:49:38Z'
  labels:
    run: nginx
  annotations:
    deployment.kubernetes.io/revision: '2'
  finalizers:
    - foregroundDeletion
  managedFields:
    - manager: kubectl
      operation: Update
      apiVersion: apps/v1
      time: '2020-09-15T15:49:38Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations': {}
          'f:deletionGracePeriodSeconds': {}
          'f:deletionTimestamp': {}
          'f:finalizers':
            .: {}
            'v:"foregroundDeletion"': {}
          'f:labels':
            .: {}
            'f:run': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:replicas': {}
          'f:revisionHistoryLimit': {}
          'f:selector':
            'f:matchLabels':
              .: {}
              'f:run': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:run': {}
            'f:spec':
              'f:containers':
                'k:{"name":"nginx"}':
                  .: {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:livenessProbe':
                    .: {}
                    'f:exec': {}
                    'f:failureThreshold': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:name': {}
                  'f:resources': {}
                  'f:securityContext':
                    .: {}
                    'f:privileged': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
    - manager: dashboard
      operation: Update
      apiVersion: apps/v1
      time: '2020-09-15T15:53:13Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"nginx"}':
                  'f:livenessProbe':
                    'f:exec':
                      'f:command': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2020-09-15T15:53:13Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:unavailableReplicas': {}
          'f:updatedReplicas': {}
spec:
  replicas: 1
  selector:
    matchLabels:
      run: nginx
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: nginx
    spec:
      containers:
        - name: nginx
          image: 'nginx:local'
          resources: {}
          livenessProbe:
            exec:
              command:
                - bin/sh
                - liveness.sh
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 2
  replicas: 2
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  unavailableReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2020-09-15T15:49:40Z'
      lastTransitionTime: '2020-09-15T15:49:40Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2020-09-15T15:53:13Z'
      lastTransitionTime: '2020-09-15T15:49:38Z'
      reason: ReplicaSetUpdated
      message: ReplicaSet "nginx-8555547746" is progressing.

